name: Create Release PR

on:
  workflow_dispatch:
    inputs:
      package:
        description: 'Package to release'
        required: true
        type: choice
        options:
          - sylph-jsx

permissions:
  contents: write
  pull-requests: write

jobs:
  create-pr:
    name: Create Release PR for ${{ inputs.package }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build -w ${{ inputs.package }}

      - name: Determine next version
        id: version
        run: |
          cd packages/${{ inputs.package }}

          # Run semantic-release dry-run to determine next version
          OUTPUT=$(npx semantic-release --dry-run --no-ci 2>&1)
          echo "$OUTPUT"

          # Extract version from output
          VERSION=$(echo "$OUTPUT" | grep -oP "Published release \K[0-9]+\.[0-9]+\.[0-9]+" | head -1)

          if [ -z "$VERSION" ]; then
            echo "Error: Could not determine next version"
            echo "$OUTPUT"
            exit 1
          fi

          echo "Next version: $VERSION"
          echo "version=$VERSION" >> $GITHUB_OUTPUT

      - name: Generate changelog
        run: |
          cd packages/${{ inputs.package }}
          npx conventional-changelog -p conventionalcommits -i CHANGELOG.md -s -r 0

      - name: Bump version in package.json
        run: |
          cd packages/${{ inputs.package }}
          npm version ${{ steps.version.outputs.version }} --no-git-tag-version

      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          commit-message: 'chore(release): ${{ inputs.package }} v${{ steps.version.outputs.version }}'
          branch: release-${{ inputs.package }}-v${{ steps.version.outputs.version }}
          delete-branch: true
          title: 'chore(release): ${{ inputs.package }} v${{ steps.version.outputs.version }}'
          body: |
            ## Release ${{ inputs.package }} v${{ steps.version.outputs.version }}

            This PR was automatically created by the release workflow.

            ### Changes
            - Version bump: `${{ inputs.package }}` â†’ `${{ steps.version.outputs.version }}`
            - Changelog updated

            ### Next Steps
            1. Review the changes in this PR
            2. Verify the version and changelog are correct
            3. Merge this PR to publish the release to npm

            **Note:** Merging this PR will automatically publish to npm and create a git tag.
          labels: |
            release
            ${{ inputs.package }}

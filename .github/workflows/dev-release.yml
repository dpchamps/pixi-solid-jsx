name: Dev Release

on:
  push:
    branches:
      - main
    paths:
      - 'packages/**'
      - '.releaserc.base.cjs'

permissions:
  contents: write
  issues: write
  pull-requests: write
  id-token: write

jobs:
  release:
    name: Release packages (dev)
    runs-on: ubuntu-latest
    strategy:
      matrix:
        package:
          - sylph-jsx
          # Add new packages here
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check for package changes
        id: changes
        run: |
          # Get the last release tag for this package
          LAST_TAG=$(git describe --tags --abbrev=0 --match "${{ matrix.package }}-v*" 2>/dev/null || echo "")

          if [ -z "$LAST_TAG" ]; then
            echo "No previous release found, will release"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            # Check if there are commits with the correct scope for this package since last release
            # semantic-release-monorepo only processes commits like "feat(sylph-jsx):" or "fix(sylph-jsx):"
            COMMITS=$(git log $LAST_TAG..HEAD --oneline --grep="^[a-z]*(\(${{ matrix.package }}\))" --extended-regexp | wc -l)

            if [ "$COMMITS" -gt 0 ]; then
              echo "Found $COMMITS scoped commits since $LAST_TAG"
              echo "has_changes=true" >> $GITHUB_OUTPUT
            else
              echo "No scoped commits since $LAST_TAG, skipping release"
              echo "has_changes=false" >> $GITHUB_OUTPUT
            fi
          fi

      - name: Build ${{ matrix.package }}
        if: steps.changes.outputs.has_changes == 'true'
        run: npm run build -w ${{ matrix.package }}

      - name: Release ${{ matrix.package }}
        if: steps.changes.outputs.has_changes == 'true'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_ACCESS_TOKEN }}
        run: |
          cd packages/${{ matrix.package }}
          npx semantic-release
